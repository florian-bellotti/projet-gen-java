<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jaxrs="http://cxf.apache.org/jaxrs"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd">

    <jaxrs:server id="remoteContainer" address="/services">
        <jaxrs:serviceBeans>
            <ref bean="dictionaryService" />
            <ref bean="decodedFileService" />
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <bean class="org.apache.cxf.jaxrs.provider.json.JSONProvider">
                <property name="convertTypesToStrings" value="true"/>
                <property name="serializeAsArray" value="true"/>
                <property name="arrayKeys">
                    <list>
                        <value>word</value>
                    </list>
                </property>
            </bean>
        </jaxrs:providers>
    </jaxrs:server>

    <bean id="dictionaryService" class="com.fbellotti.gen.remote.dictionary.DictionaryServiceImpl">
        <constructor-arg name="crudDao" ref="dictionaryDao" />
        <constructor-arg name="dictionaryDao" ref="dictionaryDao" />
        <constructor-arg name="words" ref="words" />
    </bean>

    <bean id="decodedFileService" class="com.fbellotti.gen.remote.decodedFile.DecodedFileServiceImpl">
        <constructor-arg name="daoRef" ref="decodedFileDao" />
    </bean>

    <bean id="words" class="com.fbellotti.gen.model.Words" >
        <constructor-arg name="daoDictionary" ref="dictionaryDao" />
    </bean>

    <bean id="jmsProducer" class="com.fbellotti.gen.jms.JmsProducer">
        <constructor-arg name="url" value="${jms.url}" />
        <constructor-arg name="producerQueue" value="${jms.producerQueue}" />
    </bean>

    <bean id="jmsConsumer" class="com.fbellotti.gen.jms.JmsConsumer">
        <constructor-arg name="url" value="${jms.url}" />
        <constructor-arg name="listenerQueue" value="${jms.listenerQueue}" />
        <constructor-arg name="listenerNb" value="${jms.listenerNb}" />
        <constructor-arg name="daoDecodedFile" ref="decodedFileDao" />
        <constructor-arg name="minFiability" value="${jms.minFiability}" />
        <constructor-arg name="jmsProducer" ref="jmsProducer" />
        <constructor-arg name="words" ref="words" />
    </bean>
</beans>